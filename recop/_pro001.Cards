
#include <iostream>
#include <sstream>
using namespace std;

class Cards{
	const unsigned long long m;
public :
	Cards(unsigned long long m): m(m){};
	
	const Cards lastPerm(){
		int nb=__builtin_popcountll(m);	
		unsigned long long n=(1ULL << 53)| ((1ULL << (nb-1)) -1ULL);		
		return Cards(n);
	};
	const Cards nextPerm(){
		unsigned long long n=m;
		return Cards(n);
	}
friend ostream& operator<<(ostream& o, const Cards& c);
};
Cards firstPerm(int nbCards){
	unsigned long long n=(1ULL<<nbCards) -1;
	return Cards(n);
}

inline long long selectbit(const unsigned long long m){
	unsigned long long i=m-1;
	i=~i&m;
	return i;	
}

inline long long delbit(const unsigned long long m, const unsigned long long bit){
	return m & ~bit;
}	

string cardString(const long long b){
	ostringstream res;
	
	int i=__builtin_ctzll(b);
	int v=i/4; 
	int c=i%4;
	char sv='2'+v;
	if(v==8) sv='T';
	if(v==9) sv='J';
	if(v==10) sv='Q';
	if(v==11) sv='K';
	if(v==12) sv='A';
	char sc='E';
	if(c==0) sc='s';
	if(c==1) sc='h';
	if(c==2) sc='d';
	if(c==3) sc='c';
	res << sv << sc ;	
	
	if(v>12) return "??";
	return res.str();
}

ostream& operator<<(ostream& o, const Cards& c){
	unsigned long long m = c.m;
	while(m!=0){
		long long i=selectbit(m);
		o << cardString(i) << " ";		
		m=delbit(m,i);				
	
	}
	return o;
};

int main()
{
	Cards c(-1);
	cout << c << endl;
	cout << "firstPerm" << " " << firstPerm(7) << endl;
	cout << "lastPerm" << " " << firstPerm(7).lastPerm() << endl;
	return 0;
}
